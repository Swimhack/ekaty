{"version":3,"file":"Community-7UK_jSdH.js","sources":["../../node_modules/lucide-react/dist/esm/icons/eye-off.js","../../node_modules/lucide-react/dist/esm/icons/eye.js","../../node_modules/lucide-react/dist/esm/icons/message-circle.js","../../node_modules/lucide-react/dist/esm/icons/more-vertical.js","../../node_modules/lucide-react/dist/esm/icons/pen-line.js","../../node_modules/lucide-react/dist/esm/icons/reply.js","../../node_modules/lucide-react/dist/esm/icons/send.js","../../node_modules/lucide-react/dist/esm/icons/trash-2.js","../../lib/community-chat-service.ts","../../lib/user-service.ts","../../src/components/community/AuthModal.tsx","../../src/components/community/MessageItem.tsx","../../src/pages/Community.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EyeOff = createLucideIcon(\"EyeOff\", [\n  [\"path\", { d: \"M9.88 9.88a3 3 0 1 0 4.24 4.24\", key: \"1jxqfv\" }],\n  [\n    \"path\",\n    {\n      d: \"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\",\n      key: \"9wicm4\"\n    }\n  ],\n  [\n    \"path\",\n    { d: \"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\", key: \"1jreej\" }\n  ],\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"2\", y2: \"22\", key: \"a6p6uj\" }]\n]);\n\nexport { EyeOff as default };\n//# sourceMappingURL=eye-off.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Eye = createLucideIcon(\"Eye\", [\n  [\"path\", { d: \"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\", key: \"rwhkz3\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Eye as default };\n//# sourceMappingURL=eye.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MessageCircle = createLucideIcon(\"MessageCircle\", [\n  [\"path\", { d: \"m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z\", key: \"v2veuj\" }]\n]);\n\nexport { MessageCircle as default };\n//# sourceMappingURL=message-circle.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MoreVertical = createLucideIcon(\"MoreVertical\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { MoreVertical as default };\n//# sourceMappingURL=more-vertical.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst PenLine = createLucideIcon(\"PenLine\", [\n  [\"path\", { d: \"M12 20h9\", key: \"t2du7b\" }],\n  [\"path\", { d: \"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z\", key: \"ymcmye\" }]\n]);\n\nexport { PenLine as default };\n//# sourceMappingURL=pen-line.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Reply = createLucideIcon(\"Reply\", [\n  [\"polyline\", { points: \"9 17 4 12 9 7\", key: \"hvgpf2\" }],\n  [\"path\", { d: \"M20 18v-2a4 4 0 0 0-4-4H4\", key: \"5vmcpk\" }]\n]);\n\nexport { Reply as default };\n//# sourceMappingURL=reply.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Send = createLucideIcon(\"Send\", [\n  [\"path\", { d: \"m22 2-7 20-4-9-9-4Z\", key: \"1q3vgg\" }],\n  [\"path\", { d: \"M22 2 11 13\", key: \"nzbqef\" }]\n]);\n\nexport { Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trash2 = createLucideIcon(\"Trash2\", [\n  [\"path\", { d: \"M3 6h18\", key: \"d0wm0j\" }],\n  [\"path\", { d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\", key: \"4alrt4\" }],\n  [\"path\", { d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\", key: \"v07s0e\" }],\n  [\"line\", { x1: \"10\", x2: \"10\", y1: \"11\", y2: \"17\", key: \"1uufr5\" }],\n  [\"line\", { x1: \"14\", x2: \"14\", y1: \"11\", y2: \"17\", key: \"xtxkd\" }]\n]);\n\nexport { Trash2 as default };\n//# sourceMappingURL=trash-2.js.map\n","import { supabase } from './supabase'\r\n\r\nexport interface ChatMessage {\r\n  id: string\r\n  user_id: string\r\n  username: string\r\n  avatar_url?: string\r\n  message: string\r\n  timestamp: string\r\n  likes: number\r\n  parent_id?: string\r\n  is_edited: boolean\r\n  is_deleted: boolean\r\n  replies?: ChatMessage[]\r\n}\r\n\r\nexport interface OnlineUser {\r\n  user_id: string\r\n  username: string\r\n  avatar_url?: string\r\n  is_online: boolean\r\n  last_seen: string\r\n}\r\n\r\nclass CommunityChatService {\r\n  private currentUserId: string | null = null\r\n  private currentUsername: string | null = null\r\n  private currentAvatarUrl: string | null = null\r\n\r\n  // Initialize the chat service with user credentials\r\n  async initialize(userId: string, username: string, avatarUrl?: string): Promise<void> {\r\n    this.currentUserId = userId\r\n    this.currentUsername = username\r\n    this.currentAvatarUrl = avatarUrl\r\n  }\r\n\r\n  // Test connection to Supabase\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('user_profiles')\r\n        .select('count')\r\n        .limit(1)\r\n\r\n      return !error\r\n    } catch (error) {\r\n      console.error('Connection test failed:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Get messages from the chat\r\n  async getMessages(parentId?: string, limit = 50, offset = 0): Promise<ChatMessage[]> {\r\n    try {\r\n      // Use mock data for now since we need to create the database tables\r\n      const mockMessages: ChatMessage[] = [\r\n        {\r\n          id: '1',\r\n          user_id: '1',\r\n          username: 'Sarah M.',\r\n          avatar_url: '/images/avatar1.jpg',\r\n          message: 'Just tried the new Italian place on Mason Road - absolutely amazing! The pasta was perfectly cooked and the service was outstanding. Highly recommend! üçù',\r\n          timestamp: new Date(Date.now() - 15 * 60 * 1000).toISOString(),\r\n          likes: 8,\r\n          is_edited: false,\r\n          is_deleted: false,\r\n          replies: [\r\n            {\r\n              id: '1a',\r\n              user_id: '2',\r\n              username: 'Mike K.',\r\n              avatar_url: '/images/avatar2.jpg',\r\n              message: 'Which dish did you try? I\\'ve been wanting to check it out!',\r\n              timestamp: new Date(Date.now() - 10 * 60 * 1000).toISOString(),\r\n              likes: 2,\r\n              is_edited: false,\r\n              is_deleted: false,\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: '2',\r\n          user_id: '3',\r\n          username: 'James R.',\r\n          avatar_url: '/images/avatar3.jpg',\r\n          message: 'Anyone know if Local Foods is still doing their happy hour specials? Planning to meet friends there later!',\r\n          timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\r\n          likes: 3,\r\n          is_edited: false,\r\n          is_deleted: false,\r\n        },\r\n        {\r\n          id: '3',\r\n          user_id: '4',\r\n          username: 'Emma L.',\r\n          avatar_url: '/images/avatar4.jpg',\r\n          message: 'The farmers market this weekend was incredible! Picked up some fresh ingredients and tried the new food truck. Katy\\'s food scene just keeps getting better! üåü',\r\n          timestamp: new Date(Date.now() - 45 * 60 * 1000).toISOString(),\r\n          likes: 15,\r\n          is_edited: false,\r\n          is_deleted: false,\r\n        }\r\n      ]\r\n\r\n      return mockMessages\r\n    } catch (error) {\r\n      console.error('Failed to fetch messages:', error)\r\n      return []\r\n    }\r\n  }\r\n\r\n  // Send a new message\r\n  async sendMessage(message: string, parentId?: string): Promise<ChatMessage | null> {\r\n    if (!this.currentUserId || !this.currentUsername) {\r\n      throw new Error('User not initialized')\r\n    }\r\n\r\n    try {\r\n      // Create a new message object\r\n      const newMessage: ChatMessage = {\r\n        id: Date.now().toString(),\r\n        user_id: this.currentUserId,\r\n        username: this.currentUsername,\r\n        avatar_url: this.currentAvatarUrl || '/images/default-avatar.jpg',\r\n        message: message.trim(),\r\n        timestamp: new Date().toISOString(),\r\n        likes: 0,\r\n        parent_id: parentId,\r\n        is_edited: false,\r\n        is_deleted: false,\r\n      }\r\n\r\n      return newMessage\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Update an existing message\r\n  async updateMessage(messageId: string, newMessage: string): Promise<ChatMessage | null> {\r\n    if (!this.currentUserId) {\r\n      throw new Error('User not initialized')\r\n    }\r\n\r\n    try {\r\n      // For now, just return a mock updated message\r\n      return {\r\n        id: messageId,\r\n        user_id: this.currentUserId,\r\n        username: this.currentUsername || 'User',\r\n        avatar_url: this.currentAvatarUrl || '/images/default-avatar.jpg',\r\n        message: newMessage.trim(),\r\n        timestamp: new Date().toISOString(),\r\n        likes: 0,\r\n        is_edited: true,\r\n        is_deleted: false,\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update message:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Delete a message\r\n  async deleteMessage(messageId: string): Promise<boolean> {\r\n    if (!this.currentUserId) {\r\n      throw new Error('User not initialized')\r\n    }\r\n\r\n    try {\r\n      // For now, just return success\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to delete message:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Like or unlike a message\r\n  async toggleLike(messageId: string): Promise<boolean | null> {\r\n    if (!this.currentUserId) {\r\n      throw new Error('User not initialized')\r\n    }\r\n\r\n    try {\r\n      // For now, just toggle the like state\r\n      return Math.random() > 0.5 // Randomly return true or false\r\n    } catch (error) {\r\n      console.error('Failed to toggle like:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Get online users\r\n  async getOnlineUsers(): Promise<OnlineUser[]> {\r\n    try {\r\n      // Return mock online users\r\n      const mockUsers: OnlineUser[] = [\r\n        {\r\n          user_id: '1',\r\n          username: 'Sarah M.',\r\n          avatar_url: '/images/avatar1.jpg',\r\n          is_online: true,\r\n          last_seen: new Date().toISOString(),\r\n        },\r\n        {\r\n          user_id: '2',\r\n          username: 'Mike K.',\r\n          avatar_url: '/images/avatar2.jpg',\r\n          is_online: true,\r\n          last_seen: new Date().toISOString(),\r\n        },\r\n        {\r\n          user_id: '3',\r\n          username: 'James R.',\r\n          avatar_url: '/images/avatar3.jpg',\r\n          is_online: true,\r\n          last_seen: new Date().toISOString(),\r\n        }\r\n      ]\r\n\r\n      return mockUsers\r\n    } catch (error) {\r\n      console.error('Failed to fetch online users:', error)\r\n      return []\r\n    }\r\n  }\r\n\r\n  // Clean up resources\r\n  cleanup(): void {\r\n    // Nothing to clean up in simplified version\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nexport const communityChatService = new CommunityChatService()\r\n\r\n// Export the class for testing or custom instances\r\nexport { CommunityChatService }\r\n","export interface UserProfile {\r\n  id: string\r\n  username: string\r\n  email?: string\r\n  avatar_url?: string\r\n  created_at: string\r\n  last_seen: string\r\n  is_online: boolean\r\n}\r\n\r\nexport interface UserSession {\r\n  user: UserProfile\r\n  access_token: string\r\n  refresh_token: string\r\n}\r\n\r\nclass UserService {\r\n  private currentUser: UserProfile | null = null\r\n  private authListeners: Array<(user: UserProfile | null) => void> = []\r\n\r\n  // Initialize user service and check for existing session\r\n  async initialize(): Promise<UserProfile | null> {\r\n    try {\r\n      // Check localStorage for existing session\r\n      const savedUser = localStorage.getItem('community_user')\r\n      if (savedUser) {\r\n        this.currentUser = JSON.parse(savedUser)\r\n        return this.currentUser\r\n      }\r\n      return null\r\n    } catch (error) {\r\n      console.error('Error initializing user service:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Sign up a new user\r\n  async signUp(email: string, password: string, username: string): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      // Simulate signup delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      \r\n      // Check if username is already taken (simulate)\r\n      const existingUsers = JSON.parse(localStorage.getItem('community_users') || '[]')\r\n      if (existingUsers.find((u: UserProfile) => u.username === username)) {\r\n        return { success: false, error: 'Username already taken' }\r\n      }\r\n\r\n      // Create new user\r\n      const newUser: UserProfile = {\r\n        id: Date.now().toString(),\r\n        username,\r\n        email,\r\n        avatar_url: '/images/default-avatar.jpg',\r\n        created_at: new Date().toISOString(),\r\n        last_seen: new Date().toISOString(),\r\n        is_online: true\r\n      }\r\n\r\n      // Save user to localStorage\r\n      existingUsers.push(newUser)\r\n      localStorage.setItem('community_users', JSON.stringify(existingUsers))\r\n      localStorage.setItem('community_user', JSON.stringify(newUser))\r\n      \r\n      this.currentUser = newUser\r\n      this.notifyAuthListeners(newUser)\r\n\r\n      return { success: true }\r\n    } catch (error) {\r\n      console.error('Error signing up:', error)\r\n      return { success: false, error: 'An unexpected error occurred' }\r\n    }\r\n  }\r\n\r\n  // Sign in existing user\r\n  async signIn(email: string, password: string): Promise<{ success: boolean; user?: UserProfile; error?: string }> {\r\n    try {\r\n      // Simulate signin delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000))\r\n      \r\n      // Find user by email\r\n      const existingUsers = JSON.parse(localStorage.getItem('community_users') || '[]')\r\n      const user = existingUsers.find((u: UserProfile) => u.email === email)\r\n      \r\n      if (!user) {\r\n        return { success: false, error: 'User not found' }\r\n      }\r\n\r\n      // Update last seen\r\n      user.last_seen = new Date().toISOString()\r\n      user.is_online = true\r\n\r\n      // Save updated user data\r\n      localStorage.setItem('community_user', JSON.stringify(user))\r\n      const updatedUsers = existingUsers.map((u: UserProfile) => \r\n        u.id === user.id ? user : u\r\n      )\r\n      localStorage.setItem('community_users', JSON.stringify(updatedUsers))\r\n      \r\n      this.currentUser = user\r\n      this.notifyAuthListeners(user)\r\n\r\n      return { success: true, user }\r\n    } catch (error) {\r\n      console.error('Error signing in:', error)\r\n      return { success: false, error: 'An unexpected error occurred' }\r\n    }\r\n  }\r\n\r\n  // Sign out current user\r\n  async signOut(): Promise<void> {\r\n    try {\r\n      if (this.currentUser) {\r\n        // Update user to offline\r\n        this.currentUser.is_online = false\r\n        this.currentUser.last_seen = new Date().toISOString()\r\n        \r\n        const existingUsers = JSON.parse(localStorage.getItem('community_users') || '[]')\r\n        const updatedUsers = existingUsers.map((u: UserProfile) => \r\n          u.id === this.currentUser!.id ? this.currentUser : u\r\n        )\r\n        localStorage.setItem('community_users', JSON.stringify(updatedUsers))\r\n      }\r\n\r\n      localStorage.removeItem('community_user')\r\n      this.currentUser = null\r\n      this.notifyAuthListeners(null)\r\n    } catch (error) {\r\n      console.error('Error signing out:', error)\r\n    }\r\n  }\r\n\r\n  // Get current user\r\n  getCurrentUser(): UserProfile | null {\r\n    return this.currentUser\r\n  }\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated(): boolean {\r\n    return this.currentUser !== null\r\n  }\r\n\r\n  // Listen for auth state changes\r\n  onAuthStateChange(callback: (user: UserProfile | null) => void): () => void {\r\n    this.authListeners.push(callback)\r\n    \r\n    // Return unsubscribe function\r\n    return () => {\r\n      this.authListeners = this.authListeners.filter(listener => listener !== callback)\r\n    }\r\n  }\r\n\r\n  // Notify auth state listeners\r\n  private notifyAuthListeners(user: UserProfile | null): void {\r\n    this.authListeners.forEach(listener => listener(user))\r\n  }\r\n\r\n  // Clean up resources\r\n  cleanup(): void {\r\n    this.authListeners = []\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nexport const userService = new UserService()\r\n\r\n// Export the class for testing or custom instances\r\nexport { UserService }","import { useState } from 'react'\r\nimport { X, User, Lock, Mail, Eye, EyeOff } from 'lucide-react'\r\nimport { userService } from '../../../lib/user-service'\r\n\r\ninterface AuthModalProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onSuccess: () => void\r\n}\r\n\r\nexport default function AuthModal({ isOpen, onClose, onSuccess }: AuthModalProps) {\r\n  const [isSignUp, setIsSignUp] = useState(false)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  if (!isOpen) return null\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setError('')\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      if (isSignUp) {\r\n        const result = await userService.signUp(email, password, username)\r\n        if (result.success) {\r\n          onSuccess()\r\n          onClose()\r\n        } else {\r\n          setError(result.error || 'Sign up failed')\r\n        }\r\n      } else {\r\n        const result = await userService.signIn(email, password)\r\n        if (result.success) {\r\n          onSuccess()\r\n          onClose()\r\n        } else {\r\n          setError(result.error || 'Sign in failed')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('An unexpected error occurred')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setEmail('')\r\n    setPassword('')\r\n    setUsername('')\r\n    setError('')\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    resetForm()\r\n    onClose()\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    setIsSignUp(!isSignUp)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            {isSignUp ? 'Join the Community' : 'Welcome Back'}\r\n          </h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\r\n              <p className=\"text-sm text-red-600\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {isSignUp && (\r\n            <div>\r\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Username\r\n              </label>\r\n              <div className=\"relative\">\r\n                <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n                <input\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required={isSignUp}\r\n                  className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                  placeholder=\"Choose a username\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Email\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\r\n              <input\r\n                id=\"password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\r\n                placeholder=\"Enter your password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-orange-500 text-white py-2 px-4 rounded-lg hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                {isSignUp ? 'Creating Account...' : 'Signing In...'}\r\n              </div>\r\n            ) : (\r\n              isSignUp ? 'Create Account' : 'Sign In'\r\n            )}\r\n          </button>\r\n        </form>\r\n\r\n        {/* Footer */}\r\n        <div className=\"px-6 py-4 border-t border-gray-200 text-center\">\r\n          <p className=\"text-sm text-gray-600\">\r\n            {isSignUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\r\n            <button\r\n              onClick={toggleMode}\r\n              className=\"text-orange-500 hover:text-orange-600 font-medium\"\r\n            >\r\n              {isSignUp ? 'Sign In' : 'Sign Up'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Terms for sign up */}\r\n        {isSignUp && (\r\n          <div className=\"px-6 pb-6\">\r\n            <p className=\"text-xs text-gray-500 text-center\">\r\n              By creating an account, you agree to our{' '}\r\n              <a href=\"/terms\" className=\"text-orange-500 hover:text-orange-600\">\r\n                Terms of Service\r\n              </a>{' '}\r\n              and{' '}\r\n              <a href=\"/privacy\" className=\"text-orange-500 hover:text-orange-600\">\r\n                Privacy Policy\r\n              </a>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { Heart, Reply, Edit3, Trash2, MoreVertical, Check, X } from 'lucide-react'\r\nimport { ChatMessage } from '../../../lib/community-chat-service'\r\nimport { userService } from '../../../lib/user-service'\r\n\r\ninterface MessageItemProps {\r\n  message: ChatMessage\r\n  onLike: (messageId: string) => void\r\n  onReply: (messageId: string) => void\r\n  onUpdate: (messageId: string, newMessage: string) => void\r\n  onDelete: (messageId: string) => void\r\n  isLiked?: boolean\r\n  showReplies?: boolean\r\n}\r\n\r\nexport default function MessageItem({\r\n  message,\r\n  onLike,\r\n  onReply,\r\n  onUpdate,\r\n  onDelete,\r\n  isLiked = false,\r\n  showReplies = false\r\n}: MessageItemProps) {\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editMessage, setEditMessage] = useState(message.message)\r\n  const [showMenu, setShowMenu] = useState(false)\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n\r\n  const currentUser = userService.getCurrentUser()\r\n  const canEdit = currentUser?.id === message.user_id\r\n  const canDelete = currentUser?.id === message.user_id\r\n\r\n  const formatTime = (timestamp: string) => {\r\n    const date = new Date(timestamp)\r\n    const now = new Date()\r\n    const diff = now.getTime() - date.getTime()\r\n    const minutes = Math.floor(diff / 60000)\r\n    \r\n    if (minutes < 1) return 'just now'\r\n    if (minutes < 60) return `${minutes}m ago`\r\n    \r\n    const hours = Math.floor(minutes / 60)\r\n    if (hours < 24) return `${hours}h ago`\r\n    \r\n    return date.toLocaleDateString()\r\n  }\r\n\r\n  const handleLike = () => {\r\n    onLike(message.id)\r\n  }\r\n\r\n  const handleReply = () => {\r\n    onReply(message.id)\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true)\r\n    setEditMessage(message.message)\r\n    setShowMenu(false)\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    if (!confirm('Are you sure you want to delete this message?')) return\r\n    \r\n    setIsDeleting(true)\r\n    try {\r\n      await onDelete(message.id)\r\n    } finally {\r\n      setIsDeleting(false)\r\n    }\r\n    setShowMenu(false)\r\n  }\r\n\r\n  const handleSaveEdit = async () => {\r\n    if (editMessage.trim() === message.message) {\r\n      setIsEditing(false)\r\n      return\r\n    }\r\n\r\n    setIsUpdating(true)\r\n    try {\r\n      await onUpdate(message.id, editMessage.trim())\r\n      setIsEditing(false)\r\n    } finally {\r\n      setIsUpdating(false)\r\n    }\r\n  }\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditing(false)\r\n    setEditMessage(message.message)\r\n  }\r\n\r\n  if (message.is_deleted) {\r\n    return (\r\n      <div className=\"p-4 text-center text-gray-500 italic\">\r\n        <p>This message has been deleted</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 hover:bg-gray-50 transition-colors\">\r\n      <div className=\"flex space-x-3\">\r\n        {/* Avatar */}\r\n        <img\r\n          src={message.avatar_url || '/images/default-avatar.jpg'}\r\n          alt={`${message.username} avatar`}\r\n          className=\"h-10 w-10 rounded-full bg-gray-200 flex-shrink-0\"\r\n          onError={(e) => {\r\n            const target = e.target as HTMLImageElement\r\n            target.src = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><rect width=\"40\" height=\"40\" fill=\"%23e5e7eb\"/><text x=\"20\" y=\"25\" font-family=\"Arial\" font-size=\"16\" fill=\"%236b7280\" text-anchor=\"middle\">üë§</text></svg>`\r\n          }}\r\n        />\r\n\r\n        <div className=\"flex-1 min-w-0\">\r\n          {/* Message Header */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <h4 className=\"font-semibold text-gray-900 truncate\">{message.username}</h4>\r\n              <span className=\"text-sm text-gray-500\">{formatTime(message.timestamp)}</span>\r\n              {message.is_edited && (\r\n                <span className=\"text-xs text-gray-400\">(edited)</span>\r\n              )}\r\n            </div>\r\n\r\n            {/* Action Menu */}\r\n            {(canEdit || canDelete) && (\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setShowMenu(!showMenu)}\r\n                  className=\"text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100\"\r\n                >\r\n                  <MoreVertical className=\"h-4 w-4\" />\r\n                </button>\r\n\r\n                {showMenu && (\r\n                  <div className=\"absolute right-0 top-full mt-1 w-32 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-10\">\r\n                    {canEdit && (\r\n                      <button\r\n                        onClick={handleEdit}\r\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center space-x-2\"\r\n                      >\r\n                        <Edit3 className=\"h-4 w-4\" />\r\n                        <span>Edit</span>\r\n                      </button>\r\n                    )}\r\n                    {canDelete && (\r\n                      <button\r\n                        onClick={handleDelete}\r\n                        disabled={isDeleting}\r\n                        className=\"w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center space-x-2 disabled:opacity-50\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                        <span>{isDeleting ? 'Deleting...' : 'Delete'}</span>\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Message Content */}\r\n          {isEditing ? (\r\n            <div className=\"mt-2 space-y-2\">\r\n              <textarea\r\n                value={editMessage}\r\n                onChange={(e) => setEditMessage(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none\"\r\n                rows={3}\r\n                disabled={isUpdating}\r\n              />\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={handleSaveEdit}\r\n                  disabled={isUpdating || !editMessage.trim()}\r\n                  className=\"inline-flex items-center space-x-2 px-3 py-1 bg-green-500 text-white text-sm rounded-lg hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <Check className=\"h-4 w-4\" />\r\n                  <span>{isUpdating ? 'Saving...' : 'Save'}</span>\r\n                </button>\r\n                <button\r\n                  onClick={handleCancelEdit}\r\n                  disabled={isUpdating}\r\n                  className=\"inline-flex items-center space-x-2 px-3 py-1 bg-gray-500 text-white text-sm rounded-lg hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                  <span>Cancel</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p className=\"mt-1 text-gray-700 whitespace-pre-wrap break-words\">{message.message}</p>\r\n          )}\r\n\r\n          {/* Message Actions */}\r\n          <div className=\"flex items-center space-x-4 mt-3\">\r\n            <button\r\n              onClick={handleLike}\r\n              className={`flex items-center space-x-1 text-sm transition-colors ${\r\n                isLiked \r\n                  ? 'text-orange-500' \r\n                  : 'text-gray-500 hover:text-orange-500'\r\n              }`}\r\n            >\r\n              <Heart className={`h-4 w-4 ${isLiked ? 'fill-current' : ''}`} />\r\n              <span>{message.likes}</span>\r\n            </button>\r\n            \r\n            <button\r\n              onClick={handleReply}\r\n              className=\"flex items-center space-x-1 text-sm text-gray-500 hover:text-orange-500 transition-colors\"\r\n            >\r\n              <Reply className=\"h-4 w-4\" />\r\n              <span>Reply</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Replies */}\r\n          {message.replies && message.replies.length > 0 && showReplies && (\r\n            <div className=\"mt-3 ml-4 space-y-2\">\r\n              {message.replies.map((reply) => (\r\n                <div key={reply.id} className=\"flex space-x-2\">\r\n                  <img\r\n                    src={reply.avatar_url || '/images/default-avatar.jpg'}\r\n                    alt={`${reply.username} avatar`}\r\n                    className=\"h-8 w-8 rounded-full bg-gray-200 flex-shrink-0\"\r\n                    onError={(e) => {\r\n                      const target = e.target as HTMLImageElement\r\n                      target.src = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><rect width=\"32\" height=\"32\" fill=\"%23e5e7eb\"/><text x=\"16\" y=\"20\" font-family=\"Arial\" font-size=\"12\" fill=\"%236b7280\" text-anchor=\"middle\">üë§</text></svg>`\r\n                    }}\r\n                  />\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <h5 className=\"font-medium text-gray-900 text-sm\">{reply.username}</h5>\r\n                      <span className=\"text-xs text-gray-500\">{formatTime(reply.timestamp)}</span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-700\">{reply.message}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef, useCallback } from 'react'\nimport { MessageCircle, Users, Send, RefreshCw, AlertCircle } from 'lucide-react'\nimport { communityChatService, ChatMessage, OnlineUser } from '../../lib/community-chat-service'\nimport { userService, UserProfile } from '../../lib/user-service'\nimport AuthModal from '../components/community/AuthModal'\nimport MessageItem from '../components/community/MessageItem'\n\nexport default function Community() {\n  const [messages, setMessages] = useState<ChatMessage[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [isConnected, setIsConnected] = useState(false)\n  const [isConnecting, setIsConnecting] = useState(true)\n  const [connectionError, setConnectionError] = useState<string | null>(null)\n  const [activeUsers, setActiveUsers] = useState<OnlineUser[]>([])\n  const [currentUser, setCurrentUser] = useState<UserProfile | null>(null)\n  const [showAuthModal, setShowAuthModal] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [replyTo, setReplyTo] = useState<string | null>(null)\n  const [likedMessages, setLikedMessages] = useState<Set<string>>(new Set())\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  const messagesContainerRef = useRef<HTMLDivElement>(null)\n\n  // Initialize services and check connection\n  useEffect(() => {\n    const initializeServices = async () => {\n      try {\n        setIsConnecting(true)\n        setConnectionError(null)\n\n        // Initialize user service\n        const user = await userService.initialize()\n        setCurrentUser(user)\n\n        // Initialize chat service if user is authenticated\n        if (user) {\n          await communityChatService.initialize(user.id, user.username, user.avatar_url)\n        }\n\n        // Test connection\n        const isConnected = await communityChatService.testConnection()\n        setIsConnected(isConnected)\n\n        if (isConnected) {\n          // Load initial data\n          await loadMessages()\n          await loadOnlineUsers()\n        } else {\n          setConnectionError('Could not connect to the discussion service. Please try again later.')\n        }\n      } catch (error) {\n        console.error('Error initializing services:', error)\n        setConnectionError('Failed to initialize services. Please refresh the page.')\n      } finally {\n        setIsConnecting(false)\n      }\n    }\n\n    initializeServices()\n\n    // Set up auth state listener\n    const unsubscribe = userService.onAuthStateChange(async (user) => {\n      setCurrentUser(user)\n      if (user) {\n        await communityChatService.initialize(user.id, user.username, user.avatar_url)\n        await loadMessages()\n        await loadOnlineUsers()\n      } else {\n        setMessages([])\n        setActiveUsers([])\n      }\n    })\n\n    return () => {\n      unsubscribe()\n      communityChatService.cleanup()\n      userService.cleanup()\n    }\n  }, [])\n\n  // Load messages from the chat service\n  const loadMessages = async () => {\n    try {\n      const messages = await communityChatService.getMessages()\n      setMessages(messages)\n    } catch (error) {\n      console.error('Error loading messages:', error)\n      setConnectionError('Failed to load messages. Please try again.')\n    }\n  }\n\n  // Load online users\n  const loadOnlineUsers = async () => {\n    try {\n      const users = await communityChatService.getOnlineUsers()\n      setActiveUsers(users)\n    } catch (error) {\n      console.error('Error loading online users:', error)\n    }\n  }\n\n  // Retry connection\n  const retryConnection = async () => {\n    setIsConnecting(true)\n    setConnectionError(null)\n    \n    try {\n      const isConnected = await communityChatService.testConnection()\n      setIsConnected(isConnected)\n      \n      if (isConnected) {\n        await loadMessages()\n        await loadOnlineUsers()\n      } else {\n        setConnectionError('Still unable to connect. Please check your internet connection.')\n      }\n    } catch (error) {\n      setConnectionError('Connection retry failed. Please refresh the page.')\n    } finally {\n      setIsConnecting(false)\n    }\n  }\n\n  // Send a new message\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!newMessage.trim() || !isConnected || !currentUser) return\n\n    setIsLoading(true)\n    try {\n      const message = await communityChatService.sendMessage(newMessage.trim(), replyTo || undefined)\n      if (message) {\n        setMessages(prev => [message, ...prev])\n        setNewMessage('')\n        setReplyTo(null)\n        scrollToBottom()\n      }\n    } catch (error) {\n      console.error('Error sending message:', error)\n      setConnectionError('Failed to send message. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  // Handle message like\n  const handleLike = async (messageId: string) => {\n    if (!currentUser) return\n\n    try {\n      const liked = await communityChatService.toggleLike(messageId)\n      if (liked !== null) {\n        setLikedMessages(prev => {\n          const newSet = new Set(prev)\n          if (liked) {\n            newSet.add(messageId)\n          } else {\n            newSet.delete(messageId)\n          }\n          return newSet\n        })\n\n        // Update message like count\n        setMessages(prev => prev.map(msg => \n          msg.id === messageId \n            ? { ...msg, likes: liked ? msg.likes + 1 : Math.max(0, msg.likes - 1) }\n            : msg\n        ))\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error)\n    }\n  }\n\n  // Handle message reply\n  const handleReply = (messageId: string) => {\n    setReplyTo(messageId)\n    // Focus on message input\n    const textarea = document.querySelector('textarea[placeholder*=\"Share your thoughts\"]') as HTMLTextAreaElement\n    if (textarea) {\n      textarea.focus()\n    }\n  }\n\n  // Handle message update\n  const handleUpdate = async (messageId: string, newMessage: string) => {\n    try {\n      const updatedMessage = await communityChatService.updateMessage(messageId, newMessage)\n      if (updatedMessage) {\n        setMessages(prev => prev.map(msg => \n          msg.id === messageId ? updatedMessage : msg\n        ))\n      }\n    } catch (error) {\n      console.error('Error updating message:', error)\n      setConnectionError('Failed to update message. Please try again.')\n    }\n  }\n\n  // Handle message deletion\n  const handleDelete = async (messageId: string) => {\n    try {\n      const success = await communityChatService.deleteMessage(messageId)\n      if (success) {\n        setMessages(prev => prev.map(msg => \n          msg.id === messageId ? { ...msg, is_deleted: true } : msg\n        ))\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error)\n      setConnectionError('Failed to delete message. Please try again.')\n    }\n  }\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  // Show loading state\n  if (isConnecting) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-700\">Connecting to Community Chat...</h2>\n          <p className=\"text-gray-500\">Please wait while we establish connection</p>\n        </div>\n      </div>\n    )\n  }\n\n  // Show connection error\n  if (!isConnected && connectionError) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto px-4\">\n          <div className=\"bg-white rounded-lg shadow-lg p-8 border border-red-200\">\n            <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Connection Error</h2>\n            <p className=\"text-gray-600 mb-6\">{connectionError}</p>\n            <button\n              onClick={retryConnection}\n              disabled={isConnecting}\n              className=\"inline-flex items-center space-x-2 px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <RefreshCw className={`h-5 w-5 ${isConnecting ? 'animate-spin' : ''}`} />\n              <span>{isConnecting ? 'Retrying...' : 'Retry Connection'}</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <MessageCircle className=\"h-8 w-8 text-orange-500\" />\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Community Chat</h1>\n                <p className=\"text-gray-600\">Connect with fellow food lovers in Katy</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                <Users className=\"h-4 w-4\" />\n                <span>{activeUsers.length} online</span>\n              </div>\n              \n              {currentUser ? (\n                <div className=\"flex items-center space-x-3\">\n                  <img\n                    src={currentUser.avatar_url || '/images/default-avatar.jpg'}\n                    alt={currentUser.username}\n                    className=\"h-8 w-8 rounded-full bg-gray-200\"\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement\n                      target.src = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><rect width=\"32\" height=\"32\" fill=\"%23e5e7eb\"/><text x=\"16\" y=\"20\" font-family=\"Arial\" font-size=\"12\" fill=\"%236b7280\" text-anchor=\"middle\">üë§</text></svg>`\n                    }}\n                  />\n                  <span className=\"text-sm font-medium text-gray-900\">{currentUser.username}</span>\n                  <button\n                    onClick={() => userService.signOut()}\n                    className=\"text-sm text-gray-500 hover:text-gray-700\"\n                  >\n                    Sign Out\n                  </button>\n                </div>\n              ) : (\n                <button\n                  onClick={() => setShowAuthModal(true)}\n                  className=\"bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors\"\n                >\n                  Sign In\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Chat Container */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border\">\n          {/* Message Input */}\n          {currentUser ? (\n            <div className=\"border-b border-gray-200 p-4\">\n              {replyTo && (\n                <div className=\"mb-3 p-2 bg-orange-50 border border-orange-200 rounded-lg\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-orange-700\">\n                      Replying to a message...\n                    </span>\n                    <button\n                      onClick={() => setReplyTo(null)}\n                      className=\"text-orange-500 hover:text-orange-600 text-sm\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              )}\n              \n              <form onSubmit={handleSendMessage} className=\"flex space-x-3\">\n                <img\n                  src={currentUser.avatar_url || '/images/default-avatar.jpg'}\n                  alt=\"Your avatar\"\n                  className=\"h-10 w-10 rounded-full bg-gray-200\"\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement\n                    target.src = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><rect width=\"40\" height=\"40\" fill=\"%23e5e7eb\"/><text x=\"20\" y=\"25\" font-family=\"Arial\" font-size=\"16\" fill=\"%236b7280\" text-anchor=\"middle\">üë§</text></svg>`\n                  }}\n                />\n                <div className=\"flex-1\">\n                  <textarea\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Share your thoughts about Katy restaurants...\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none\"\n                    rows={3}\n                    disabled={isLoading}\n                  />\n                  <div className=\"flex justify-between items-center mt-2\">\n                    <p className=\"text-xs text-gray-500\">\n                      Be respectful and share your honest dining experiences\n                    </p>\n                    <button\n                      type=\"submit\"\n                      disabled={!newMessage.trim() || isLoading}\n                      className=\"inline-flex items-center space-x-2 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                    >\n                      <Send className=\"h-4 w-4\" />\n                      <span>{isLoading ? 'Sending...' : 'Send'}</span>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div className=\"border-b border-gray-200 p-8 text-center\">\n              <MessageCircle className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Join the Conversation</h3>\n              <p className=\"text-gray-600 mb-4\">Sign in to start chatting with the community</p>\n              <button\n                onClick={() => setShowAuthModal(true)}\n                className=\"bg-orange-500 text-white px-6 py-2 rounded-lg hover:bg-orange-600 transition-colors\"\n              >\n                Sign In to Chat\n              </button>\n            </div>\n          )}\n\n          {/* Messages */}\n          <div \n            ref={messagesContainerRef}\n            className=\"divide-y divide-gray-200 max-h-96 overflow-y-auto\"\n          >\n            {messages.length === 0 ? (\n              <div className=\"p-8 text-center text-gray-500\">\n                <MessageCircle className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                <p>No messages yet. Start the conversation!</p>\n              </div>\n            ) : (\n              messages.map((message) => (\n                <MessageItem\n                  key={message.id}\n                  message={message}\n                  onLike={handleLike}\n                  onReply={handleReply}\n                  onUpdate={handleUpdate}\n                  onDelete={handleDelete}\n                  isLiked={likedMessages.has(message.id)}\n                  showReplies={true}\n                />\n              ))\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n\n        {/* Community Guidelines */}\n        <div className=\"mt-6 bg-orange-50 border border-orange-200 rounded-lg p-4\">\n          <h3 className=\"font-semibold text-orange-800 mb-2\">Community Guidelines</h3>\n          <ul className=\"text-sm text-orange-700 space-y-1\">\n            <li>‚Ä¢ Share honest reviews and dining experiences</li>\n            <li>‚Ä¢ Be respectful to restaurant owners and fellow diners</li>\n            <li>‚Ä¢ No spam, self-promotion, or inappropriate content</li>\n            <li>‚Ä¢ Help build a supportive local food community</li>\n          </ul>\n        </div>\n      </div>\n\n      {/* Auth Modal */}\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        onSuccess={() => {\n          setShowAuthModal(false)\n          // The auth state change listener will handle the rest\n        }}\n      />\n    </div>\n  )\n}"],"names":["EyeOff","createLucideIcon","Eye","MessageCircle","MoreVertical","PenLine","Reply","Send","Trash2","CommunityChatService","__publicField","userId","username","avatarUrl","data","error","supabase","parentId","limit","offset","message","messageId","newMessage","communityChatService","UserService","savedUser","email","password","resolve","existingUsers","u","newUser","user","updatedUsers","callback","listener","userService","AuthModal","isOpen","onClose","onSuccess","isSignUp","setIsSignUp","useState","setEmail","setPassword","setUsername","showPassword","setShowPassword","isLoading","setIsLoading","setError","handleSubmit","e","result","resetForm","handleClose","toggleMode","jsxs","jsx","X","User","Mail","Lock","MessageItem","onLike","onReply","onUpdate","onDelete","isLiked","showReplies","isEditing","setIsEditing","editMessage","setEditMessage","showMenu","setShowMenu","isUpdating","setIsUpdating","isDeleting","setIsDeleting","currentUser","canEdit","canDelete","formatTime","timestamp","date","diff","minutes","hours","handleLike","handleReply","handleEdit","handleDelete","handleSaveEdit","handleCancelEdit","target","Edit3","Check","Heart","reply","Community","messages","setMessages","setNewMessage","isConnected","setIsConnected","isConnecting","setIsConnecting","connectionError","setConnectionError","activeUsers","setActiveUsers","setCurrentUser","showAuthModal","setShowAuthModal","replyTo","setReplyTo","likedMessages","setLikedMessages","messagesEndRef","useRef","messagesContainerRef","useEffect","loadMessages","loadOnlineUsers","unsubscribe","users","retryConnection","handleSendMessage","prev","scrollToBottom","liked","newSet","msg","textarea","handleUpdate","updatedMessage","_a","AlertCircle","RefreshCw","Users"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}