{"version":3,"file":"Cuisines-DUordIUR.js","sources":["../../src/data/cuisines.ts","../../src/pages/Cuisines.tsx"],"sourcesContent":["// Centralized cuisine data to ensure consistency across components\nexport interface CuisineCategory {\n  name: string\n  description: string\n  icon: string\n  slug: string\n  searchTerms: string[]\n}\n\nexport const CUISINE_CATEGORIES: CuisineCategory[] = [\n  {\n    name: 'Italian',\n    description: 'Authentic pasta, pizza, and classic Italian dishes',\n    icon: '🍝',\n    slug: 'italian',\n    searchTerms: ['italian', 'pasta', 'pizza', 'italian food']\n  },\n  {\n    name: 'Mexican',\n    description: 'Traditional tacos, enchiladas, and Mexican favorites',\n    icon: '🌮',\n    slug: 'mexican',\n    searchTerms: ['mexican', 'tacos', 'burritos', 'enchiladas', 'mexican food']\n  },\n  {\n    name: 'Steakhouse',\n    description: 'Premium steaks, grilled specialties, and fine dining',\n    icon: '🥩',\n    slug: 'steakhouse',\n    searchTerms: ['steakhouse', 'steak', 'beef', 'grilled', 'fine dining']\n  },\n  {\n    name: 'Asian',\n    description: 'Sushi, Chinese, Thai, and other Asian cuisines',\n    icon: '🍜',\n    slug: 'asian',\n    searchTerms: ['asian', 'sushi', 'chinese', 'thai', 'japanese', 'korean']\n  },\n  {\n    name: 'Breakfast',\n    description: 'All-day breakfast, brunch, and morning favorites',\n    icon: '🥞',\n    slug: 'breakfast',\n    searchTerms: ['breakfast', 'brunch', 'pancakes', 'eggs', 'morning']\n  },\n  {\n    name: 'BBQ',\n    description: 'Smoked meats, barbecue classics, and comfort food',\n    icon: '🍖',\n    slug: 'bbq',\n    searchTerms: ['bbq', 'barbecue', 'smoked', 'ribs', 'brisket']\n  },\n  {\n    name: 'American',\n    description: 'Classic American fare, burgers, and comfort food',\n    icon: '🍔',\n    slug: 'american',\n    searchTerms: ['american', 'burger', 'comfort food', 'classic']\n  },\n  {\n    name: 'Seafood',\n    description: 'Fresh fish, shellfish, and coastal favorites',\n    icon: '🦐',\n    slug: 'seafood',\n    searchTerms: ['seafood', 'fish', 'shrimp', 'crab', 'oysters']\n  },\n  {\n    name: 'Indian',\n    description: 'Curry, tandoor, and traditional Indian dishes',\n    icon: '🍛',\n    slug: 'indian',\n    searchTerms: ['indian', 'curry', 'tandoor', 'indian food']\n  },\n  {\n    name: 'Fast Food',\n    description: 'Quick service, burgers, and fast casual dining',\n    icon: '🍟',\n    slug: 'fast-food',\n    searchTerms: ['fast food', 'quick', 'burgers', 'chicken']\n  }\n]\n\n// Helper functions for cuisine operations\nexport const getCuisineByName = (name: string): CuisineCategory | undefined => {\n  return CUISINE_CATEGORIES.find(cuisine => \n    cuisine.name.toLowerCase() === name.toLowerCase() ||\n    cuisine.slug === name.toLowerCase()\n  )\n}\n\nexport const getCuisineBySlug = (slug: string): CuisineCategory | undefined => {\n  return CUISINE_CATEGORIES.find(cuisine => cuisine.slug === slug)\n}\n\nexport const getPopularCuisines = (): CuisineCategory[] => {\n  return CUISINE_CATEGORIES.slice(0, 6) // First 6 are most popular\n}\n\nexport const searchCuisines = (query: string): CuisineCategory[] => {\n  const searchTerm = query.toLowerCase().trim()\n  return CUISINE_CATEGORIES.filter(cuisine =>\n    cuisine.name.toLowerCase().includes(searchTerm) ||\n    cuisine.searchTerms.some(term => term.includes(searchTerm))\n  )\n}","\nimport { Link } from 'react-router-dom'\nimport { ChefHat, MapPin } from 'lucide-react'\nimport { CUISINE_CATEGORIES } from '@/data/cuisines'\n\nconst cuisineColors = [\n  { color: 'bg-red-50 border-red-200 hover:bg-red-100', textColor: 'text-red-700' },\n  { color: 'bg-yellow-50 border-yellow-200 hover:bg-yellow-100', textColor: 'text-yellow-700' },\n  { color: 'bg-gray-50 border-gray-200 hover:bg-gray-100', textColor: 'text-gray-700' },\n  { color: 'bg-green-50 border-green-200 hover:bg-green-100', textColor: 'text-green-700' },\n  { color: 'bg-orange-50 border-orange-200 hover:bg-orange-100', textColor: 'text-orange-700' },\n  { color: 'bg-amber-50 border-amber-200 hover:bg-amber-100', textColor: 'text-amber-700' },\n  { color: 'bg-blue-50 border-blue-200 hover:bg-blue-100', textColor: 'text-blue-700' },\n  { color: 'bg-teal-50 border-teal-200 hover:bg-teal-100', textColor: 'text-teal-700' },\n  { color: 'bg-purple-50 border-purple-200 hover:bg-purple-100', textColor: 'text-purple-700' },\n  { color: 'bg-pink-50 border-pink-200 hover:bg-pink-100', textColor: 'text-pink-700' },\n]\n\nexport default function Cuisines() {\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-display font-bold text-gray-900 mb-4\">\n          Explore Cuisines in Katy\n        </h1>\n        <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n          Discover restaurants by cuisine type and find your new favorite flavors in Katy, Texas.\n        </p>\n      </div>\n\n      {/* Featured Cuisines Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\n        {CUISINE_CATEGORIES.map((cuisine, index) => {\n          const colorScheme = cuisineColors[index % cuisineColors.length]\n          return (\n            <Link\n              key={cuisine.name}\n              to={`/restaurants?cuisine=${encodeURIComponent(cuisine.name)}`}\n              className={`group block p-6 border-2 rounded-xl transition-all duration-200 ${colorScheme.color} hover:shadow-lg hover:scale-[1.02]`}\n            >\n              <div className=\"flex items-start gap-4\">\n                <div className=\"text-4xl flex-shrink-0\">\n                  {cuisine.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className={`text-xl font-bold ${colorScheme.textColor} mb-2`}>\n                    {cuisine.name}\n                  </h3>\n                  <p className=\"text-gray-600 text-sm mb-3\">\n                    {cuisine.description}\n                  </p>\n                  <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n                    <MapPin size={14} />\n                    <span>Available in Katy</span>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"bg-gray-50 rounded-xl p-8 text-center\">\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <ChefHat className=\"text-orange-500\" size={24} />\n          <h2 className=\"text-2xl font-bold text-gray-900\">\n            Find Your Perfect Meal\n          </h2>\n        </div>\n        <p className=\"text-gray-600 mb-6\">\n          Browse hundreds of restaurants across all your favorite cuisine types in Katy\n        </p>\n        <div className=\"flex flex-wrap justify-center gap-4\">\n          <Link\n            to=\"/restaurants\"\n            className=\"bg-orange-500 text-white px-6 py-3 rounded-lg hover:bg-orange-600 transition-colors font-medium\"\n          >\n            View All Restaurants\n          </Link>\n          <Link\n            to=\"/popular\"\n            className=\"bg-white text-gray-700 border border-gray-300 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n          >\n            Most Popular\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["CUISINE_CATEGORIES","cuisineColors","Cuisines","jsxs","jsx","cuisine","index","colorScheme","Link","MapPin","ChefHat"],"mappings":"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"}